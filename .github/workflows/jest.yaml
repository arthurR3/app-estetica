name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

  test-servicios:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run ServiciosScreen Tests
        run: npm test -- --testPathPattern='servicios.test.tsx'

  test-home:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run HomeScreen Tests
        run: npm test -- --testPathPattern='home.test.tsx'

  test-citas:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run CitasScreen Tests
        run: npm test -- --testPathPattern='citas.test.tsx'

  deploy-expo:
    runs-on: ubuntu-latest
    needs: [test-servicios, test-home, test-citas]
    if: github.ref == 'refs/heads/main'  # Solo ejecuta en la rama main
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm install
        - name: Run Expo EAS Build
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          npx eas-cli build --platform android --profile production --non-interactive
          echo "Extracting download URL..."
          DOWNLOAD_URL=$(npx eas-cli build:list --status finished --json | jq -r '.[0].artifacts.buildUrl')
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
  
      # 4. Descargar el archivo desde la URL generada
      - name: Download build artifact
        run: |
          echo "Downloading build artifact from $DOWNLOAD_URL"
          curl -L -o app.aab "$DOWNLOAD_URL"
  
      # 5. Instalar `butler`
      - name: Install butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/latest/archive/default
          unzip butler.zip -d ~/butler
          sudo mv ~/butler/butler /usr/local/bin/
  
      # 6. Subir a Itch.io
      - name: Deploy to Itch.io
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_API_KEY }}
        run: |
          butler push app.aab devJoshep/AppEstetica:android
