name: Run Jest Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

  test-servicios:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run ServiciosScreen Tests
        run: npm test -- --testPathPattern='servicios.test.tsx'

  test-home:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run HomeScreen Tests
        run: npm test -- --testPathPattern='home.test.tsx'

  test-citas:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.14.0'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run CitasScreen Tests
        run: npm test -- --testPathPattern='citas.test.tsx'
  deploy-expo:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: "npm"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Android app
        run: eas build --platform android --profile preview --local --output ${{ github.workspace }}/app-release.apk
      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: ${{ github.workspace }}/app-release.apk

      #- name: Build for iOS
      #  run: eas build --platform ios --non-interactive

      #- name: Upload to Stores (Optional)
      #  if: always() # Deshabilitar si no necesitas publicar directamente en las tiendas
      #  run: |
      #    eas submit --platform android --non-interactive --latest
      #    eas submit --platform ios --non-interactive --latest